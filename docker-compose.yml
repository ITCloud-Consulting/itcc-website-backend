version: '3.8'

services:
  # PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: company-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/app.ini
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - APP_KEY=${APP_KEY}
      - APP_URL=http://localhost:8000
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=${DB_DATABASE:-company}
      - DB_USERNAME=${DB_USERNAME:-company}
      - DB_PASSWORD=${DB_PASSWORD:-secret}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - company-network
    command: >
      sh -c "php-fpm"

  # Nginx Service
  webserver:
    image: nginx:alpine
    container_name: company-webserver
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    depends_on:
      - app
    networks:
      - company-network

  # MySQL Service
  db:
    image: mysql:8.0
    container_name: company-db
    platform: linux/amd64
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: company_db  # Database name
      MYSQL_ROOT_PASSWORD: root  # Root password
      MYSQL_PASSWORD: root  # User password
      MYSQL_USER: root  # Database user
    volumes:
      - dbdata:/var/lib/mysql  # Persist database data
    ports:
      - "3306:3306"  # Map MySQL port
    networks:
      - company-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 1m
      timeout: 30s
      retries: 5


  # PHPMyAdmin
  phpmyadmin:
    image: phpmyadmin:latest
    platform: linux/amd64
    container_name: company-pma
    depends_on:
      db:
        condition: service_healthy
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: root
      UPLOAD_LIMIT: 100M
      UPLOAD_MAX_SIZE: 100M
      MEMORY_LIMIT: 512M
      MAX_EXECUTION_TIME: 300
    restart: always
    ports:
      - "8080:80"
    networks:
      - company-network
  #redisimageName
  
# Docker Networks
networks:
  company-network:
    driver: bridge

# Volumes
volumes:
  dbdata:
    driver: local