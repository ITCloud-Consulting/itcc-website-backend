version: '3.8'

services:
  # PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: itcc-website
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/app.ini
    env_file:
      - .env  # <-- Toutes les variables seront lues depuis le .env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - itcc-network
    command: sh -c "php-fpm"

  # Nginx Service
  webserver:
    image: nginx:alpine
    container_name: itcc-webserver
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    depends_on:
      - app
    networks:
      - itcc-network

  # MySQL Service
  db:
    image: mysql:8.0
    container_name: itcc-db
    platform: linux/amd64
    restart: unless-stopped
    env_file:
      - .env
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}    # Base de donnÃ©es
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD} # Root password
      MYSQL_USER: ${DB_USERNAME}        # DB user
      MYSQL_PASSWORD: ${DB_PASSWORD}    # DB password
    volumes:
      - dbdata:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - itcc-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
      interval: 1m
      timeout: 30s
      retries: 5

  # PHPMyAdmin
  phpmyadmin:
    image: phpmyadmin:latest
    platform: linux/amd64
    container_name: itcc-pma
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      PMA_HOST: ${DB_HOST:-db}
      PMA_PORT: ${DB_PORT:-3306}
      PMA_USER: ${DB_USERNAME:-root}
      PMA_PASSWORD: ${DB_PASSWORD:-root}
      UPLOAD_LIMIT: 100M
      UPLOAD_MAX_SIZE: 100M
      MEMORY_LIMIT: 512M
      MAX_EXECUTION_TIME: 300
    restart: always
    ports:
      - "8080:80"
    networks:
      - itcc-network

# Docker Networks
networks:
  itcc-network:
    driver: bridge

# Volumes
volumes:
  dbdata:
    driver: local
